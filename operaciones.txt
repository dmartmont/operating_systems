-- segmentos --
000 -> memg
001 -> LITNUM
010 -> LITSTR
011 -> DATANUM
100 -> DATASTR
101 -> workload

-- 64 bits --
2.2.1 Mover entero de LITNUM a DATANUM
0000(4) <memref>(15) <integer>(15) <pad>(30)

2.2.2 Mueve cadena LITSTR a DATASTR
0001(4) <memref>(15) <string>(15) <pad>(30)

2.2.3 Almacena en memref el contenido de PC sumado con integer
0010(4) <memref>(15) <integer>(15) <pad>(30)

2.2.5 Transfiere un valor de una posici칩n de memoria a otra dentro del mismo segmento.
        0 -> transferencia en DATASTR
        1 -> transferencia en DATANUM
0100(4) <num/val>(1) <memref_dst>(15) <memref_src>(15) <pad>()

2.2.6 Realiza la operacion aritmetica indicada
        0 -> transferencia en DATASTR
        1 -> transferencia en DATANUM
0101(4) <op>(3) <flagP>(1) <memref_dst>(15) <memref_op1>(15) <memref_op2>(15) <pad>(11)


2.2.7 Guarda en el memref de destino el valor de la posicion memref_src+integer
0110(4) <flag>(1) <memref_dst>(15) <memref_src>(15) <integer>(15) <pad>(13)

2.2.8 Guarda en memref_dst+integer el contenido de memref_src
0111(4) <flag>(1) <memref_dst>(15) <integer>(15) <memref_src>(15) <pad>(13)

2.2.11 Lee una cadena del proceso de control y la pone en DATASTR - readStr(<memref>, <memref>)
1010(4) <memrefdst>(15) <memrefsize>(15) <pad>(30)

2.2.14 Compara <memref1> con <memref2> usando <op>, si es TRUE brinca a <integer>
        000 -> >=
        001 -> >
        010 -> <=
        011 -> <
        100 -> =
        101 -> <> 
1101(4) <op>(3) <memref1>(15) <memref2>(15) <integer>(15) <pad>(10) 

-- 32 bits --
2.2.4 Asigna el valor de <memref> al PC (Program counter)
0011(4) <memref>(15) <pad>(13)

2.2.9 Leer valor entero desde STDIN, y lo mueve a memoria DATANUM - readInt(<memref>)
1000(4) <memref>(15) <pad>(13)

2.2.10 Escribir entero de <memref> ubicado en DATANUM en STDOUT - writeInt(<memref>)
1001(4) <memref>(15) <pad>(13)

2.2.12 Escribir cadena de caracteres de <memref> ubicada en DATASTR en STDOUT - writeStr(<memref>)
1011(4) <memref>(15) <pad>(13)

2.2.13 Salto a la instrucci칩n se침alada
1100(4) <integer_addr>(15) <pad>(13)

-- 8 bits --
2.2.15 Termina la ejecuci칩n del proceso
1110(4) <pad>(4)

2.2.16 Suspende interpretador hasta que el control lo reactive
1111(4) <pad>(4)